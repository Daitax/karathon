# Generated by Django 4.1 on 2022-10-19 12:56

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='account.user')),
                ('middle_name', models.CharField(blank=True, max_length=20, verbose_name='Отчество')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True, verbose_name='Номер телефона')),
                ('photo', models.ImageField(blank=True, upload_to='', verbose_name='Аватарка')),
                ('instagram', models.URLField(blank=True, verbose_name='Ссылка на инстаграм')),
                ('timezone', models.CharField(choices=[('Europe/Moscow', 'Мск'), ('Europe/Samara', 'Мск+01'), ('Asia/Yekaterinburg', 'Мск+02'), ('Asia/Omsk', 'Мск+03'), ('Asia/Novosibirsk', 'Мск+04'), ('Asia/Irkutsk', 'Мск+05'), ('Asia/Yakutsk', 'Мск+06'), ('Asia/Vladivostok', 'Мск+07'), ('Asia/Sakhalin', 'Мск+08'), ('Asia/Kamchatka', 'Мск+09'), ('Europe/Kaliningrad', 'Мск-01'), ('Europe/London', 'Мск-02'), ('UTC', 'Мск-03'), ('Atlantic/Cape_Verde', 'Мск-04'), ('Atlantic/South_Georgia', 'Мск-05'), ('America/Buenos_Aires', 'Мск-06'), ('America/New_York', 'Мск-07'), ('America/Panama', 'Мск-08'), ('America/Edmonton', 'Мск-09'), ('America/Los_Angeles', 'Мск-10'), ('America/Anchorage', 'Мск-11'), ('America/Adak', 'Мск-12'), ('Pacific/Honolulu', 'Мск-13'), ('Pacific/Midway', 'Мск-14')], default='Etc/GMT-3', max_length=30)),
                ('category', models.ForeignKey(default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('karathon', models.ManyToManyField(related_name='participant', to='core.karathon')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
            },
            bases=('account.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
